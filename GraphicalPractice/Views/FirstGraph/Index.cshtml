@{
    ViewBag.Title = "First Graph (Object constancy)";
}
@section featured {
    <section class="featured">
        <div class="content-wrapper">
            <hgroup class="title">
                <h1>Graphical Practice</h1>
                <h2>@ViewBag.Message</h2>
            </hgroup>
        </div>
    </section>
}
<style>

@@import url(http://fonts.googleapis.com/css?family=PT+Serif|PT+Serif:b|PT+Serif:i|PT+Sans|PT+Sans:b);

    html {
      min-width: 1040px;
    }

    body {
      background: #fcfcfa;
      color: #333;
      font-family: "PT Serif", serif;
      margin: 1em auto 4em auto;
      position: relative;
      width: 960px;
    }

    header,
    footer,
    h1,
    h2,
    h3,
    h4,
    aside {
      color: #000;
      font-family: "PT Sans", sans-serif;
    }

    h1 {
      font-size: 64px;
      font-weight: 300;
      letter-spacing: -2px;
      margin: .3em 0 .1em 0;
    }

    h2 {
      margin-top: 2em;
    }

    h1, h2 {
      text-rendering: optimizeLegibility;
    }

    h2 a {
      color: #ccc;
      left: -20px;
      position: absolute;
      width: 740px;
    }

    footer {
      font-size: small;
      margin-top: 8em;
    }

    header aside {
      margin-top: 80px;
    }

    header aside,
    footer aside {
      color: #636363;
      text-align: right;
    }

    aside {
      font-size: small;
      right: 0;
      position: absolute;
      width: 180px;
    }

    .attribution {
      font-size: small;
      margin-bottom: 2em;
    }

    body > p, li > p {
      line-height: 1.5em;
    }

    body > p {
      width: 720px;
    }

    body > blockquote {
      width: 640px;
    }

    li {
      width: 680px;
    }

    a {
      color: steelblue;
    }

    a:not(:hover) {
      text-decoration: none;
    }

    pre, code, textarea {
      font-family: "Menlo", monospace;
    }

    code {
      line-height: 1em;
    }

    textarea {
      font-size: 100%;
    }

    body > pre {
      border-left: solid 2px #ccc;
      padding-left: 18px;
      margin: 2em 0 2em -20px;
    }

    .html .value,
    .javascript .string,
    .javascript .regexp {
      color: #756bb1;
    }

    .html .tag,
    .css .tag,
    .javascript .keyword {
      color: #3182bd;
    }

    .comment {
      color: #636363;
    }

    .html .doctype,
    .javascript .number {
      color: #31a354;
    }

    .html .attribute,
    .css .attribute,
    .javascript .class,
    .javascript .special {
      color: #e6550d;
    }

    svg {
      font: 10px sans-serif;
    }

    .axis path, .axis line {
      fill: none;
      stroke: #000;
      shape-rendering: crispEdges;
    }

    sup, sub {
      line-height: 0;
    }

    q:before,
    blockquote:before {
      content: "“";
    }

    q:after,
    blockquote:after {
      content: "”";
    }

    blockquote:before {
      position: absolute;
      left: 2em;
    }

    blockquote:after {
      position: absolute;
    }

    /*end general styles*/

    svg {
      font: 10px sans-serif;
      background-color: white;
    }

    .bar rect {
      fill: #8C9599;
    }

    .bar:hover rect {
      fill: #4C4237;
    }

    .value {
      fill: white;
    }

    .axis {
      shape-rendering: crispEdges;
    }

    .axis path {
      stroke: none;
    }

    .x.axis line {
      stroke: #fff;
      stroke-opacity: .8;
    }

    .x.axis text {
        fill: #8C9599;
    }

    .y.axis path {
      stroke: black;
    }

    #chart {
        margin: 10px;
    }

    text.label {
        fill: #8C9599;
    }
</style>
<h2>First Graph (Object constancy)</h2>
<p id="menu"><b>Top States by Age Bracket, 2008</b><br>Age: <select></select>
<p id="chart">

<aside>Source: <a href="http://www.census.gov/popest/archives/2000s/vintage_2008/" target="_blank">Census Bureau</a></aside>



<script type="text/javascript">
    var margin = { top: 20, right: 40, bottom: 10, left: 40 },
        width = 700,
        height = 250 - margin.top - margin.bottom;

    var format = d3.format(".1%"),
        states,
        age;

    var x = d3.scale.linear()
        .range([0, width]);

    var y = d3.scale.ordinal()
        .rangeRoundBands([0, height], .1);

    var xAxis = d3.svg.axis()
        .scale(x)
        
        .orient("top")
        //.tickSize(-height - margin.bottom)
        .tickSize(-11)
        .tickFormat(format);

    var svg = d3.select("#chart").append("svg")
        .attr("width", width + margin.left + margin.right)
        .attr("height", height + margin.top + margin.bottom)
        //.style("margin-left", -margin.left + "px")
      .append("g")
        .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

    svg.append("g")
        .attr("class", "x axis");

    //svg.append("g")
    //    .attr("class", "y axis")
    //  .append("line")
    //    .attr("class", "domain")
    //    .attr("y2", height);

    var menu = d3.select("#menu select")
        .on("change", change);

    d3.csv("../states-age.csv.txt", function(data) {
        states = data;

        var ages = d3.keys(states[0]).filter(function (key) {
                return key != "State" && key != "Total";
        });

        states.forEach(function (state) {
                ages.forEach(function (age) {
                    state[age] = state[age] / state.Total;
                });
        });

        menu.selectAll("option")
                .data(ages)
              .enter().append("option")
                .text(function (d) { return d; });

        menu.property("value", "18 to 24 Years");

        redraw();
    });

    var altKey;

    d3.select(window)
        .on("keydown", function () { altKey = d3.event.altKey; })
        .on("keyup", function () { altKey = false; });

    function change() {
        clearTimeout(timeout);

        d3.transition()
            .duration(altKey ? 7500 : 750)
            .each(redraw);
    }

    function redraw() {
        var age1 = menu.property("value"),
            top = states.sort(function (a, b) { return b[age1] - a[age1]; }).slice(0, 10);

        y.domain(top.map(function (d) { return d.State; }));

        var bar = svg.selectAll(".bar")
            .data(top, function (d) { return d.State; });

        var barEnter = bar.enter().insert("g", ".axis")
            .attr("class", "bar")
            .attr("transform", function (d) { return "translate(0," + (y(d.State) + height) + ")"; })
            .style("fill-opacity", 0);

        barEnter.append("rect")
            .attr("width", age && function (d) { return x(d[age]); })
            .attr("height", y.rangeBand());

        barEnter.append("text")
            //.style("fill", "yellow")
            .attr("class", "label")
            .attr("x", -3)
            .attr("y", y.rangeBand() / 2)
            .attr("dy", ".35em")
            .attr("text-anchor", "end")
            .text(function (d) { return d.State; });

        barEnter.append("text")
            .attr("class", "value")
            .attr("x", age && function (d) { return x(d[age]) - 3; })
            .attr("y", y.rangeBand() / 2)
            .attr("dy", ".35em")
            .attr("text-anchor", "end");

        x.domain([0, top[0][age = age1]]);

        var barUpdate = d3.transition(bar)
            .attr("transform", function (d) { return "translate(0," + (d.y0 = y(d.State)) + ")"; })
            .style("fill-opacity", 1);

        barUpdate.select("rect")
            .attr("width", function (d) { return x(d[age]); });

        barUpdate.select(".value")
            .attr("x", function (d) { return x(d[age]) - 3; })
            .text(function (d) { return format(d[age]); });

        var barExit = d3.transition(bar.exit())
            .attr("transform", function (d) { return "translate(0," + (d.y0 + height) + ")"; })
            .style("fill-opacity", 0)
            .remove();

        barExit.select("rect")
            .attr("width", function (d) { return x(d[age]); });

        barExit.select(".value")
            .attr("x", function (d) { return x(d[age]) - 3; })
            .text(function (d) { return format(d[age]); });

        d3.transition(svg).select(".x.axis")
            .call(xAxis);
    }

    var timeout = setTimeout(function () {
        menu.property("value", "65 Years and Over").node().focus();
        change();
    }, 5000);

</script>

