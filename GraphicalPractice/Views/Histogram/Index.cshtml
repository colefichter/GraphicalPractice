@{
    ViewBag.Title = "Histogram";
}
@section featured {
    <section class="featured">
        <div class="content-wrapper">
            <hgroup class="title">
                <h1>Graphical Practice</h1>
                <h2>@ViewBag.Message</h2>
            </hgroup>
        </div>
    </section>
}
<style>
    svg {
        border: 1px solid black;
        background: white;
    }

    .axis .domain, .axis .tick {
        stroke: #000;
        fill: none;
    }

    .title {
        fill: #666;
        font-family: Helvetica, sans-serif; /* Helvetica is cool, right? */
        text-anchor: middle;
        font-size: 24px;
    }

    .bar {
        fill: #fcc;
        stroke: #444;
    }
</style>
<h2>Histogram</h2>
<div id='chart'></div>
<script type="text/javascript">
    var width = 640;
    var height = 480;
    var root = d3.select('#chart').append('svg')
        .attr({
            'width': width,
            'height': height,
        });

    // Render the title.
    var titleHeight = 50;
    root.append('text')
        .attr({
            'class': 'title',
            'x': width / 2,
            'y': titleHeight / 2,
        })
        .text('Skull-splitting power!');

    // Simulate 500 rolls of the axe.
    var rollDie = function (numSides) {
        return 1 + Math.floor(Math.random() * numSides);
    };

    var MAX_ROLL = 4 + 4 + 6 + 6;
    var rollHisto = d3.range(MAX_ROLL + 1).map(function () { return 0; });
    for (var i = 0; i < 500; i++) {
        var rolled = rollDie(4) + rollDie(4) + rollDie(6) + rollDie(6);
        rollHisto[rolled]++;
    }

    var yAxisWidth = 50;
    var xAxisHeight = 50;

    // Define the root g element.
    var histoWidth = width - yAxisWidth;
    var histoHeight = height - xAxisHeight - titleHeight;
    var histoG = root.append('g')
        .attr({
            'class': 'histo',
            'transform': 'translate(' + yAxisWidth + ', ' + titleHeight + ')',
        });


    // Render our axis.
    var xScale = d3.scale.linear()
        .domain([0, rollHisto.length])
        .range([0, histoWidth]);
    var yScale = d3.scale.linear()
        .domain([0, d3.max(rollHisto) * 1.2])
        .range([histoHeight, 0]);

    var xAxis = d3.svg.axis().scale(xScale);
    histoG.append('g')
        .attr({
            'class': 'x axis',
            'transform': 'translate(0, ' + histoHeight + ')',
        })
        .call(xAxis);

    var yAxis = d3.svg.axis().scale(yScale).orient('left');
    histoG.append('g')
        .attr('class', 'y axis')
        .call(yAxis);

    // Render the dice bars.
    histoG.selectAll('rect.bar')
        .data(rollHisto).enter()
      .append('rect')
        .attr({
            'class': 'bar',
            'x': function (d, i) { return xScale(i - 0.5); },
            'width': xScale(1) - xScale(0),
            'y': yScale,
            'height': function (d) { return yScale(0) - yScale(d); },
        });
</script>

